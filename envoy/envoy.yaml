# This configuration terminates a CONNECT request and sends the CONNECT payload upstream.
# It can be used to test TCP tunneling as described in
# https://envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/upgrades
admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          access_log_options:
            flush_log_on_tunnel_successfully_established: true
            flush_access_log_on_new_request: true
          access_log:
            - name: envoy.access_loggers.file
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: "/dev/stdout"
                log_format:
                  json_format:
                    "@timestamp": "%START_TIME%"
                    hostname: "%HOSTNAME%"
                    method: "%REQ(:METHOD)%"
                    code: "%RESPONSE_CODE%"
                    UpstreamHost: "%UPSTREAM_HOST%"
                    protocol: "%PROTOCOL%" 
                    path: "%REQ(:PATH)%"  
                    userAgent: "%REQ(USER-AGENT)%"     
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              routes:
              - match:
                  connect_matcher:
                    {}
                route:
                  cluster: myservice
                  upgrade_configs:
                  - upgrade_type: CONNECT
                    connect_config:
                      {}
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
##          http2_protocol_options:
##            allow_connect: true
##          upgrade_configs:
##          - upgrade_type: CONNECT
  clusters:
  - name: myservice
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: myservice
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: sshserver
                port_value: 2222